{"version":3,"sources":["Components/Profile.js","App.js","index.js"],"names":["lang","require","Profile","name","useState","loading","setLoading","error","setError","user","setUser","joined","setJoined","repos","setRepos","datos","a","undefined","fetch","userData","json","repoData","repo","date","Date","created_at","toDateString","setTimeout","console","log","useEffect","className","color","src","avatar_url","alt","login","width","location","public_repos","followers","following","map","elm","index","href","html_url","size","language","style","marginRight","stargazers_count","forks_count","App","listen","setListen","userState","setUserState","display","setDisplay","handleChangeButton","e","preventDefault","action","onClick","type","onChange","target","value","onKeyPress","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ea3acc3.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {RepoIcon} from '@primer/octicons-react'\nimport { LoopCircleLoading } from 'react-loadingg';\nimport \"../Components/Profile.css\";\n\nvar lang = require(\"language-map\");\nconst Profile = ({name}) => {  \n  \n  const [loading,setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [user, setUser] = useState([]);\n  const [joined, setJoined] = useState(\"\");\n  const [repos, setRepos] = useState([]);\n  \n  const datos = async () => {\n    if (name === \"\" || name === undefined) {\n    } else {\n      try {\n        \n        const  userData  = await fetch(`https://api.github.com/users/${name}`)\n        const user = await userData.json();\n        const  repoData  = await fetch(`https://api.github.com/users/${name}/repos`)\n        const repo = await repoData.json();\n       \n        setRepos(repo);\n        let date = new Date(user.created_at);\n        setJoined(date.toDateString());\n        setUser(user);\n        setError(false);\n        setLoading(false);\n        setTimeout(()=>{\n          setLoading(true)\n        },800)\n      } catch (error) {\n        console.log(error);\n        setError(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    datos();\n  }, [name]);\n  return (<div className=\"prof\">\n    {(loading === false)? <LoopCircleLoading color=\"#0070f3\"/>:<div className='profile-cont'>\n  {error === true ? (\n    <div>Error</div>\n  ) : (\n    <div className='cont-user'>\n        <div className='user'>\n        <img\n          className='img-profile'\n          src={user.avatar_url}\n          alt={user.login}\n          width='150px'\n        />\n        <h3 className='user-name'>{user.name}</h3>\n        <h5 className='user-login'>{user.login}</h5>\n        <div className='user-loc'>\n          <h4>\n            <i className='fas fa-map-marker-alt'></i>\n            {user.location}\n          </h4>\n          <h4 className='joined'>\n            <i className='fas fa-calendar-alt'></i>\n            {joined}\n          </h4>\n        </div>\n        <div className='user-fav'>\n          <div className='public_repos'>\n            <h4>Repos</h4>\n            <h5>{user.public_repos}</h5>\n          </div>\n          <div className='followers'>\n            <h4>Followers</h4>\n            <h5>{user.followers}</h5>\n          </div>\n\n          <div className='following'>\n            <h4>Following</h4>\n            <h5>{user.following}</h5>\n          </div>\n        </div>\n      </div>\n      <div className='cont-repos'>\n        \n        {repos.map((elm, index) => (\n          <a href={elm.html_url} key={index} className='repo'>\n            <div className='repo-title'>\n              \n                <RepoIcon className=\"repoicon\"size={15} />\n                <h1> {elm.name}</h1>\n              \n              <h6 className=\"public\">Public</h6>\n            </div>\n            <div className='repo-info'>\n              <div className='info-t'>\n                <div>\n                  {elm.language === \"\" ? (\n                    console.log(\"ss\")\n                  ) : (\n                    <h4 className='info-type'>\n                      <span\n                        style={{\n                          marginRight: \"8px\",\n                          color: `${\n                            elm.language === null\n                              ? \"transparent\"\n                              : lang[elm.language].color\n                          }`,\n                        }}\n                      >\n                        <i className='fas fa-circle'></i>\n                      </span>\n                      {elm.language}\n                    </h4>\n                  )}\n                </div>\n\n                <div>\n                  {elm.stargazers_count === 0 ? (\n                    <span></span>\n                  ) : (\n                    <h4 className='info-type'>\n                      <i className='fas fa-star'></i>\n                      <span>{elm.stargazers_count}</span>\n                    </h4>\n                  )}\n                </div>\n                <div>\n                  {elm.forks_count === 0 ? (\n                    <span></span>\n                  ) : (\n                    <h4 className='info-type'>\n                      <i className='fas fa-code-branch'></i>\n                      {elm.forks_count}\n                    </h4>\n                  )}\n                </div>\n              </div>\n              <h4 className='size'>{elm.size} KB</h4>\n            </div>\n          </a>\n        ))}\n      </div>\n    </div>\n  )}\n</div>}\n  </div>\n  );\n};\n\nexport default Profile;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport Profile from \"./Components/Profile\";\n\nfunction App() {\n \n  const [listen, setListen] = useState(\"\");\n  const [user, setUser] = useState(\"Octocat\");\n  const [userState, setUserState] = useState(user);\n  const [display, setDisplay] = useState(\"none\");\n\n  const handleChangeInput = (e) => {\n    if (e.key === \"Enter\") {\n      setUser(e.target.value);\n      \n    }\n  };\n\n  const handleChange = (e) => {\n    setListen(e.target.value);\n    setDisplay(\"none\");\n  };\n  const handleChangeButton = (e) => {\n    e.preventDefault();\n    if (listen === \"\") {\n      setDisplay(\"none\");\n      setTimeout(() => {\n        setDisplay(\"flex\");\n      }, 100);\n    } else {\n      setUser(listen);\n      setDisplay(\"none\");\n      \n    }\n  };\n  useEffect(() => {\n    setUserState(user);\n  }, [user]);\n  return (\n    <div className='App'>\n      <header className='App-header animate__slideOutDown'>\n        <div className='cont-head'>\n          <i className='fab fa-github'></i>\n          <h1>OctoProfile</h1>\n        </div>\n        <form action='' className='cont-search'>\n          <button className='icon-search' onClick={handleChangeButton}>\n            <i className='fas fa-search'></i>\n          </button>\n          <input\n            className='input-search'\n            type='text'\n            onChange={handleChange}\n            onKeyPress={handleChangeInput}\n          />\n          <button className='button-search' onClick={handleChangeButton}>\n            Search\n          </button>\n        </form>\n        <div\n          className='msg-error animate__bounceIn'\n          style={{ display: `${display}` }}\n        >\n          <i className='fas fa-exclamation'></i> No a ingresado ningun nombre de\n          usuario\n        </div>\n      </header>\n      <div className='cont-profile'>\n        {user === \"\" ? console.log(\"J\") : <Profile name={userState} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}